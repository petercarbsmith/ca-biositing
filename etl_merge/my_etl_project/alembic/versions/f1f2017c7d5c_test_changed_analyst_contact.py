"""test changed analyst contact

Revision ID: f1f2017c7d5c
Revises: 81f96df1e929
Create Date: 2025-10-14 19:23:03.833322

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f1f2017c7d5c'
down_revision: Union[str, Sequence[str], None] = '81f96df1e929'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('import_log',
    sa.Column('import_id', sa.Integer(), nullable=False),
    sa.Column('import_timestamp', sa.DateTime(), nullable=True),
    sa.Column('destination', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_file', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('records_imported', sa.Integer(), nullable=True),
    sa.Column('import_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error_log', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('import_user', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('import_id')
    )
    op.create_table('testusers2',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_foreign_key(None, 'analysis_replicate_id', 'analysis_results', ['result_id'], ['result_id'])
    op.create_foreign_key(None, 'analysis_replicate_id', 'analysis_types', ['analysis_types_id'], ['analysis_type_id'])
    op.create_index('idx_analysis_results_parameter_id', 'analysis_results', ['parameter_id'], unique=False)
    op.create_index('uq_analysis_results_experiment_parameter_replicate', 'analysis_results', ['experiment_id', 'parameter_id', 'replicate_no'], unique=True)
    op.create_foreign_key(None, 'analysis_results', 'preprocessed_samples', ['anlaysis_sample'], ['prepro_material_id'])
    op.create_foreign_key(None, 'analysis_results', 'url', ['raw_data_url_id'], ['url_id'])
    op.create_foreign_key(None, 'analysis_results', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'analysis_results', 'experiments', ['experiment_id'], ['experiment_id'])
    op.create_foreign_key(None, 'analysis_results', 'analysts_contacts', ['analyst_id'], ['analyst_id'])
    op.create_foreign_key(None, 'analysis_results', 'equipment', ['measurement_equipment_id'], ['equipment_id'])
    op.create_foreign_key(None, 'analysis_results', 'analysis_types', ['analysis_type_id'], ['analysis_type_id'])
    op.create_foreign_key(None, 'analysis_results', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'analysis_results', 'qc_results', ['qc_result_id'], ['qc_result_id'])
    op.create_foreign_key(None, 'analysts_contacts', 'affiliations', ['analyst_affiliation'], ['affiliation_id'])
    op.create_foreign_key(None, 'autoclave_profile', 'analysis_results', ['result_id'], ['result_id'])
    op.create_foreign_key(None, 'autoclave_profile', 'product_type', ['product_type_id'], ['product_type_id'])
    op.create_foreign_key(None, 'autoclave_profile', 'units', ['product_unit_id'], ['unit_id'])
    op.create_index(op.f('ix_biomass_biomass_name'), 'biomass', ['biomass_name'], unique=False)
    op.create_index(op.f('ix_biomass_biomass_type_id'), 'biomass', ['biomass_type_id'], unique=False)
    op.create_foreign_key(None, 'biomass', 'taxonomy', ['taxonomy_id'], ['taxonomy_id'])
    op.create_foreign_key(None, 'biomass', 'primary_product', ['primary_product_id'], ['primary_product_id'])
    op.create_foreign_key(None, 'biomass', 'biomass_type', ['biomass_type_id'], ['biomass_type_id'])
    op.alter_column('biomass_availability', 'biomass_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.create_index(op.f('ix_biomass_availability_biomass_id'), 'biomass_availability', ['biomass_id'], unique=False)
    op.create_foreign_key(None, 'biomass_availability', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'biomass_availability', 'geographic_locations', ['location_id'], ['location_id'])
    op.create_foreign_key(None, 'biomass_availability', 'data_sources', ['data_source'], ['source_id'])
    op.create_foreign_key(None, 'biomass_availability', 'primary_product', ['primary_product_id'], ['primary_product_id'])
    op.alter_column('biomass_price', 'biomass_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.create_index(op.f('ix_biomass_price_biomass_id'), 'biomass_price', ['biomass_id'], unique=False)
    op.create_foreign_key(None, 'biomass_price', 'data_sources', ['price_data_sources'], ['source_id'])
    op.create_foreign_key(None, 'biomass_price', 'biomass', ['biomass_id'], ['biomass_id'])
    op.alter_column('biomass_quality', 'biomass_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.create_index(op.f('ix_biomass_quality_biomass_id'), 'biomass_quality', ['biomass_id'], unique=False)
    op.create_foreign_key(None, 'biomass_quality', 'data_sources', ['quality_data_sources'], ['source_id'])
    op.create_foreign_key(None, 'biomass_quality', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_unique_constraint(None, 'biomass_type', ['biomass_type'])
    op.create_foreign_key(None, 'buildings', 'geographic_locations', ['location_id'], ['location_id'])
    op.create_foreign_key(None, 'buildings', 'affiliations', ['affiliation_id'], ['affiliation_id'])
    op.create_foreign_key(None, 'collectors', 'affiliations', ['collector_affiliation'], ['affiliation_id'])
    op.create_foreign_key(None, 'compositional_analysis', 'analysis_results', ['result_id'], ['result_id'])
    op.create_foreign_key(None, 'compositional_analysis', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'compositional_analysis', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'compositional_analysis', 'parameters', ['calculated_parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'compositional_analysis', 'units', ['calculated_parameter_unit_id'], ['unit_id'])
    op.create_index('idx_data_sources_source_name_id', 'data_sources', ['source_name_id'], unique=False)
    op.create_foreign_key(None, 'data_sources', 'location_resolutions', ['data_resolution_id'], ['location_resolution_id'])
    op.create_foreign_key(None, 'data_sources', 'source_names', ['source_name_id'], ['source_name_id'])
    op.create_foreign_key(None, 'data_sources', 'url', ['url_id'], ['url_id'])
    op.create_foreign_key(None, 'data_sources', 'source_types', ['source_type_id'], ['source_type_id'])
    op.create_foreign_key(None, 'equipment', 'rooms', ['equipment_room_id'], ['room_id'])
    op.create_index('idx_experiment_methods_experiment_id', 'experiment_methods', ['experiment_id'], unique=False)
    op.create_index('idx_experiment_methods_method_id', 'experiment_methods', ['method_id'], unique=False)
    op.create_foreign_key(None, 'experiment_methods', 'methods', ['method_id'], ['method_id'])
    op.create_foreign_key(None, 'experiment_methods', 'experiments', ['experiment_id'], ['experiment_id'])
    op.create_index('idx_experiments_analysis_type_id', 'experiments', ['analysis_type_id'], unique=False)
    op.create_foreign_key(None, 'experiments', 'analysis_types', ['analysis_type_id'], ['analysis_type_id'])
    op.create_foreign_key(None, 'experiments', 'geographic_locations', ['exper_location_id'], ['location_id'])
    op.create_foreign_key(None, 'experiments', 'analysis_abbreviations', ['analysis_abbrev_id'], ['analysis_abbreviations_id'])
    op.create_foreign_key(None, 'experiments', 'units', ['exper_duration_unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'external_atip', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'external_atip', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'external_atip', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'external_atip', 'geographic_locations', ['location_id'], ['location_id'])
    op.create_index('idx_external_dairy_one_biomass_id', 'external_dairy_one', ['biomass_id'], unique=False)
    op.create_index('idx_external_dairy_one_parameter_id', 'external_dairy_one', ['parameter_id'], unique=False)
    op.create_foreign_key(None, 'external_dairy_one', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'external_dairy_one', 'methods', ['methodology_reference_id'], ['method_id'])
    op.create_foreign_key(None, 'external_dairy_one', 'data_sources', ['data_source_id'], ['source_id'])
    op.create_foreign_key(None, 'external_dairy_one', 'parameter_methods', ['parameter_method_id'], ['param_method_id'])
    op.create_foreign_key(None, 'external_dairy_one', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'external_dairy_one', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'external_dairy_one', 'analysis_types', ['analysis_type_id'], ['analysis_type_id'])
    op.create_foreign_key(None, 'external_ebmud', 'data_sources', ['data_source_id'], ['source_id'])
    op.create_foreign_key(None, 'external_ebmud', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'external_ebmud', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'external_ebmud', 'parameter_methods', ['parameter_method_id'], ['param_method_id'])
    op.create_foreign_key(None, 'external_ebmud', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'external_ebmud', 'analysis_types', ['analysis_type_id'], ['analysis_type_id'])
    op.create_index('idx_external_inl_biofeedstock_library_biomass_id', 'external_inl_biofeedstock_library', ['biomass_id'], unique=False)
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'data_sources', ['data_source_id'], ['source_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'parameter_methods', ['parameter_method_id'], ['param_method_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'states', ['state_id'], ['state_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'methods', ['methodology_reference_id'], ['method_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'harvest_methods', ['harvest_method_id'], ['harvest_method_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'collection_methods', ['collection_method_id'], ['collection_method_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'analysis_types', ['analysis_type_id'], ['analysis_type_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'field_samples', ['sample_id'], ['sample_id'])
    op.create_foreign_key(None, 'external_inl_biofeedstock_library', 'affiliations', ['affiliations_id'], ['affiliation_id'])
    op.create_foreign_key(None, 'external_land_id', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'external_land_id', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'external_land_id', 'geographic_locations', ['location_id'], ['location_id'])
    op.create_foreign_key(None, 'external_land_id', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_index('idx_external_phyllis2_analysis_type_id', 'external_phyllis2', ['analysis_type_id'], unique=False)
    op.create_index('idx_external_phyllis2_biomass_id', 'external_phyllis2', ['biomass_id'], unique=False)
    op.create_foreign_key(None, 'external_phyllis2', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'external_phyllis2', 'parameter_methods', ['parameter_method_id'], ['param_method_id'])
    op.create_foreign_key(None, 'external_phyllis2', 'analysis_types', ['analysis_type_id'], ['analysis_type_id'])
    op.create_foreign_key(None, 'external_phyllis2', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'external_phyllis2', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'external_phyllis2', 'data_sources', ['data_source_id'], ['source_id'])
    op.create_foreign_key(None, 'external_phyllis2', 'methods', ['methodology_reference_id'], ['method_id'])
    op.create_foreign_key(None, 'external_usda', 'geographic_locations', ['location_id'], ['location_id'])
    op.create_foreign_key(None, 'external_usda', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'external_usda', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'external_usda', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'fermentation_profile', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'fermentation_profile', 'product_type', ['product_type_id'], ['product_type_id'])
    op.create_foreign_key(None, 'fermentation_profile', 'analysis_results', ['result_id'], ['result_id'])
    op.create_foreign_key(None, 'fermentation_profile', 'organisms', ['organism_id'], ['organism_id'])
    op.create_foreign_key(None, 'fermentation_profile', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'fermentation_profile', 'units', ['product_unit_id'], ['unit_id'])
    op.alter_column('field_samples', 'sample_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('field_samples', 'biomass_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('field_samples', 'created_at',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.create_index(op.f('ix_field_samples_biomass_id'), 'field_samples', ['biomass_id'], unique=False)
    op.create_index(op.f('ix_field_samples_source_codename_id'), 'field_samples', ['source_codename_id'], unique=False)
    op.create_foreign_key(None, 'field_samples', 'harvest_methods', ['harvest_method_id'], ['harvest_method_id'])
    op.create_foreign_key(None, 'field_samples', 'biomass', ['biomass_id'], ['biomass_id'])
    op.create_foreign_key(None, 'field_samples', 'field_storage', ['field_storage_id'], ['field_storage_id'])
    op.create_foreign_key(None, 'field_samples', 'providers', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'field_samples', 'collection_methods', ['collection_method_id'], ['collection_method_id'])
    op.create_foreign_key(None, 'field_samples', 'collectors', ['collector_id'], ['collector_id'])
    op.create_foreign_key(None, 'field_samples', 'data_sources', ['data_source_id'], ['source_id'])
    op.create_foreign_key(None, 'field_samples', 'geographic_locations', ['location_id'], ['location_id'])
    op.create_foreign_key(None, 'field_samples', 'units', ['field_storage_duration_unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'gasification_profile', 'analysis_results', ['result_id'], ['result_id'])
    op.create_foreign_key(None, 'gasification_profile', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'gasification_profile', 'product_type', ['product_type_id'], ['product_type_id'])
    op.create_foreign_key(None, 'gasification_profile', 'units', ['product_unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'gasification_profile', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'geographic_locations', 'location_resolutions', ['location_resolution_id'], ['location_resolution_id'])
    op.create_foreign_key(None, 'geographic_locations', 'states', ['state_id'], ['state_id'])
    op.create_foreign_key(None, 'geographic_locations', 'street_addresses', ['street_address_id'], ['street_address_id'])
    op.create_foreign_key(None, 'geographic_locations', 'counties', ['county_id'], ['county_id'])
    op.create_foreign_key(None, 'geographic_locations', 'cities', ['city_id'], ['city_id'])
    op.create_foreign_key(None, 'geographic_locations', 'regions', ['region_id'], ['region_id'])
    op.create_foreign_key(None, 'geographic_locations', 'fips', ['fips_id'], ['fips_id'])
    op.create_foreign_key(None, 'geographic_locations', 'zips', ['zip_id'], ['zip_id'])
    op.create_foreign_key(None, 'icp_analysis', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'icp_analysis', 'analysis_results', ['result_id'], ['result_id'])
    op.create_foreign_key(None, 'icp_analysis', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'icp_analysis', 'url', ['concentration_calculation_url_id'], ['url_id'])
    op.create_foreign_key(None, 'metadata', 'field_samples', ['sample_id'], ['sample_id'])
    op.create_foreign_key(None, 'metadata', 'soil_type', ['soil_type'], ['soil_type_id'])
    op.create_foreign_key(None, 'metadata', 'ag_treatments', ['ag_treatment_id'], ['ag_treatment_id'])
    op.create_index('idx_method_equipment_equipment_id', 'method_equipment', ['equipment_id'], unique=False)
    op.create_index('idx_method_equipment_method_id', 'method_equipment', ['method_id'], unique=False)
    op.create_foreign_key(None, 'method_equipment', 'methods', ['method_id'], ['method_id'])
    op.create_foreign_key(None, 'method_equipment', 'equipment', ['equipment_id'], ['equipment_id'])
    op.create_index('idx_methods_method_name', 'methods', ['method_name'], unique=False)
    op.create_foreign_key(None, 'methods', 'references', ['procedure_reference_id'], ['reference_id'])
    op.create_foreign_key(None, 'methods', 'method_categories', ['method_category_id'], ['method_category_id'])
    op.create_foreign_key(None, 'methods', 'url', ['method_url_id'], ['url_id'])
    op.create_foreign_key(None, 'methods', 'method_abbrevs', ['method_abbrev_id'], ['method_abbrev_id'])
    op.create_foreign_key(None, 'methods', 'method_standards', ['method_standard_id'], ['method_standard_id'])
    op.create_foreign_key(None, 'parameter_methods', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'parameter_methods', 'methods', ['method_id'], ['method_id'])
    op.create_index('idx_parameter_units_parameter_id', 'parameter_units', ['parameter_id'], unique=False)
    op.create_index('idx_parameter_units_unit_id', 'parameter_units', ['unit_id'], unique=False)
    op.create_foreign_key(None, 'parameter_units', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'parameter_units', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'parameters', 'parameter_catagories', ['parameter_category_id'], ['parameter_catagory_id'])
    op.create_foreign_key(None, 'parameters', 'units', ['standard_unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'particle_size', 'units', ['particle_units'], ['unit_id'])
    op.create_foreign_key(None, 'particle_size', 'field_samples', ['sample_id'], ['sample_id'])
    op.create_index('idx_preprocessed_samples_biomass_sample_id', 'preprocessed_samples', ['biomass_sample_id'], unique=False)
    op.create_index('idx_preprocessed_samples_prepro_method_id', 'preprocessed_samples', ['prepro_method_id'], unique=False)
    op.create_foreign_key(None, 'preprocessed_samples', 'preprocessing_methods', ['prepro_method_id'], ['prepro_method_id'])
    op.create_foreign_key(None, 'preprocessed_samples', 'field_samples', ['biomass_sample_id'], ['sample_id'])
    op.create_foreign_key(None, 'preprocessed_samples', 'analysts_contacts', ['prepro_analyst_id'], ['analyst_id'])
    op.create_foreign_key(None, 'preprocessed_samples', 'buildings', ['storage_building'], ['building_id'])
    op.create_foreign_key(None, 'preprocessing_methods', 'references', ['method_ref_id'], ['reference_id'])
    op.create_foreign_key(None, 'preprocessing_methods', 'preprocessing_methods_abbreviations', ['prepro_method_abbrev_id'], ['prepro_methods_abbrev_id'])
    op.create_foreign_key(None, 'providers', 'provider_types', ['provider_type_id'], ['provider_type_id'])
    op.create_foreign_key(None, 'providers', 'affiliations', ['provider_affiliation'], ['affiliation_id'])
    op.create_foreign_key(None, 'proximate_analysis', 'analysis_results', ['result_id'], ['result_id'])
    op.create_foreign_key(None, 'proximate_analysis', 'parameters', ['parameter_id'], ['parameter_id'])
    op.create_foreign_key(None, 'proximate_analysis', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'references', 'url', ['url_id'], ['url_id'])
    op.create_foreign_key(None, 'references', 'doi', ['reference_doi_id'], ['doi_id'])
    op.create_foreign_key(None, 'rooms', 'buildings', ['building_id'], ['building_id'])
    op.create_foreign_key(None, 'soil_type', 'geographic_locations', ['soil_location'], ['location_id'])
    op.create_foreign_key(None, 'vectorized_raster_polygons', 'raster_metadata', ['raster_id'], ['id'])
    op.create_foreign_key(None, 'xrf_analysis', 'units', ['unit_id'], ['unit_id'])
    op.create_foreign_key(None, 'xrf_analysis', 'analysis_results', ['result_id'], ['result_id'])
    op.create_foreign_key(None, 'xrf_analysis', 'parameters', ['parameter_id'], ['parameter_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'xrf_analysis', type_='foreignkey')
    op.drop_constraint(None, 'xrf_analysis', type_='foreignkey')
    op.drop_constraint(None, 'xrf_analysis', type_='foreignkey')
    op.drop_constraint(None, 'vectorized_raster_polygons', type_='foreignkey')
    op.drop_constraint(None, 'soil_type', type_='foreignkey')
    op.drop_constraint(None, 'rooms', type_='foreignkey')
    op.drop_constraint(None, 'references', type_='foreignkey')
    op.drop_constraint(None, 'references', type_='foreignkey')
    op.drop_constraint(None, 'proximate_analysis', type_='foreignkey')
    op.drop_constraint(None, 'proximate_analysis', type_='foreignkey')
    op.drop_constraint(None, 'proximate_analysis', type_='foreignkey')
    op.drop_constraint(None, 'providers', type_='foreignkey')
    op.drop_constraint(None, 'providers', type_='foreignkey')
    op.drop_constraint(None, 'preprocessing_methods', type_='foreignkey')
    op.drop_constraint(None, 'preprocessing_methods', type_='foreignkey')
    op.drop_constraint(None, 'preprocessed_samples', type_='foreignkey')
    op.drop_constraint(None, 'preprocessed_samples', type_='foreignkey')
    op.drop_constraint(None, 'preprocessed_samples', type_='foreignkey')
    op.drop_constraint(None, 'preprocessed_samples', type_='foreignkey')
    op.drop_index('idx_preprocessed_samples_prepro_method_id', table_name='preprocessed_samples')
    op.drop_index('idx_preprocessed_samples_biomass_sample_id', table_name='preprocessed_samples')
    op.drop_constraint(None, 'particle_size', type_='foreignkey')
    op.drop_constraint(None, 'particle_size', type_='foreignkey')
    op.drop_constraint(None, 'parameters', type_='foreignkey')
    op.drop_constraint(None, 'parameters', type_='foreignkey')
    op.drop_constraint(None, 'parameter_units', type_='foreignkey')
    op.drop_constraint(None, 'parameter_units', type_='foreignkey')
    op.drop_index('idx_parameter_units_unit_id', table_name='parameter_units')
    op.drop_index('idx_parameter_units_parameter_id', table_name='parameter_units')
    op.drop_constraint(None, 'parameter_methods', type_='foreignkey')
    op.drop_constraint(None, 'parameter_methods', type_='foreignkey')
    op.drop_constraint(None, 'methods', type_='foreignkey')
    op.drop_constraint(None, 'methods', type_='foreignkey')
    op.drop_constraint(None, 'methods', type_='foreignkey')
    op.drop_constraint(None, 'methods', type_='foreignkey')
    op.drop_constraint(None, 'methods', type_='foreignkey')
    op.drop_index('idx_methods_method_name', table_name='methods')
    op.drop_constraint(None, 'method_equipment', type_='foreignkey')
    op.drop_constraint(None, 'method_equipment', type_='foreignkey')
    op.drop_index('idx_method_equipment_method_id', table_name='method_equipment')
    op.drop_index('idx_method_equipment_equipment_id', table_name='method_equipment')
    op.drop_constraint(None, 'metadata', type_='foreignkey')
    op.drop_constraint(None, 'metadata', type_='foreignkey')
    op.drop_constraint(None, 'metadata', type_='foreignkey')
    op.drop_constraint(None, 'icp_analysis', type_='foreignkey')
    op.drop_constraint(None, 'icp_analysis', type_='foreignkey')
    op.drop_constraint(None, 'icp_analysis', type_='foreignkey')
    op.drop_constraint(None, 'icp_analysis', type_='foreignkey')
    op.drop_constraint(None, 'geographic_locations', type_='foreignkey')
    op.drop_constraint(None, 'geographic_locations', type_='foreignkey')
    op.drop_constraint(None, 'geographic_locations', type_='foreignkey')
    op.drop_constraint(None, 'geographic_locations', type_='foreignkey')
    op.drop_constraint(None, 'geographic_locations', type_='foreignkey')
    op.drop_constraint(None, 'geographic_locations', type_='foreignkey')
    op.drop_constraint(None, 'geographic_locations', type_='foreignkey')
    op.drop_constraint(None, 'geographic_locations', type_='foreignkey')
    op.drop_constraint(None, 'gasification_profile', type_='foreignkey')
    op.drop_constraint(None, 'gasification_profile', type_='foreignkey')
    op.drop_constraint(None, 'gasification_profile', type_='foreignkey')
    op.drop_constraint(None, 'gasification_profile', type_='foreignkey')
    op.drop_constraint(None, 'gasification_profile', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_constraint(None, 'field_samples', type_='foreignkey')
    op.drop_index(op.f('ix_field_samples_source_codename_id'), table_name='field_samples')
    op.drop_index(op.f('ix_field_samples_biomass_id'), table_name='field_samples')
    op.alter_column('field_samples', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('field_samples', 'biomass_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('field_samples', 'sample_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_constraint(None, 'fermentation_profile', type_='foreignkey')
    op.drop_constraint(None, 'fermentation_profile', type_='foreignkey')
    op.drop_constraint(None, 'fermentation_profile', type_='foreignkey')
    op.drop_constraint(None, 'fermentation_profile', type_='foreignkey')
    op.drop_constraint(None, 'fermentation_profile', type_='foreignkey')
    op.drop_constraint(None, 'fermentation_profile', type_='foreignkey')
    op.drop_constraint(None, 'external_usda', type_='foreignkey')
    op.drop_constraint(None, 'external_usda', type_='foreignkey')
    op.drop_constraint(None, 'external_usda', type_='foreignkey')
    op.drop_constraint(None, 'external_usda', type_='foreignkey')
    op.drop_constraint(None, 'external_phyllis2', type_='foreignkey')
    op.drop_constraint(None, 'external_phyllis2', type_='foreignkey')
    op.drop_constraint(None, 'external_phyllis2', type_='foreignkey')
    op.drop_constraint(None, 'external_phyllis2', type_='foreignkey')
    op.drop_constraint(None, 'external_phyllis2', type_='foreignkey')
    op.drop_constraint(None, 'external_phyllis2', type_='foreignkey')
    op.drop_constraint(None, 'external_phyllis2', type_='foreignkey')
    op.drop_index('idx_external_phyllis2_biomass_id', table_name='external_phyllis2')
    op.drop_index('idx_external_phyllis2_analysis_type_id', table_name='external_phyllis2')
    op.drop_constraint(None, 'external_land_id', type_='foreignkey')
    op.drop_constraint(None, 'external_land_id', type_='foreignkey')
    op.drop_constraint(None, 'external_land_id', type_='foreignkey')
    op.drop_constraint(None, 'external_land_id', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_constraint(None, 'external_inl_biofeedstock_library', type_='foreignkey')
    op.drop_index('idx_external_inl_biofeedstock_library_biomass_id', table_name='external_inl_biofeedstock_library')
    op.drop_constraint(None, 'external_ebmud', type_='foreignkey')
    op.drop_constraint(None, 'external_ebmud', type_='foreignkey')
    op.drop_constraint(None, 'external_ebmud', type_='foreignkey')
    op.drop_constraint(None, 'external_ebmud', type_='foreignkey')
    op.drop_constraint(None, 'external_ebmud', type_='foreignkey')
    op.drop_constraint(None, 'external_ebmud', type_='foreignkey')
    op.drop_constraint(None, 'external_dairy_one', type_='foreignkey')
    op.drop_constraint(None, 'external_dairy_one', type_='foreignkey')
    op.drop_constraint(None, 'external_dairy_one', type_='foreignkey')
    op.drop_constraint(None, 'external_dairy_one', type_='foreignkey')
    op.drop_constraint(None, 'external_dairy_one', type_='foreignkey')
    op.drop_constraint(None, 'external_dairy_one', type_='foreignkey')
    op.drop_constraint(None, 'external_dairy_one', type_='foreignkey')
    op.drop_index('idx_external_dairy_one_parameter_id', table_name='external_dairy_one')
    op.drop_index('idx_external_dairy_one_biomass_id', table_name='external_dairy_one')
    op.drop_constraint(None, 'external_atip', type_='foreignkey')
    op.drop_constraint(None, 'external_atip', type_='foreignkey')
    op.drop_constraint(None, 'external_atip', type_='foreignkey')
    op.drop_constraint(None, 'external_atip', type_='foreignkey')
    op.drop_constraint(None, 'experiments', type_='foreignkey')
    op.drop_constraint(None, 'experiments', type_='foreignkey')
    op.drop_constraint(None, 'experiments', type_='foreignkey')
    op.drop_constraint(None, 'experiments', type_='foreignkey')
    op.drop_index('idx_experiments_analysis_type_id', table_name='experiments')
    op.drop_constraint(None, 'experiment_methods', type_='foreignkey')
    op.drop_constraint(None, 'experiment_methods', type_='foreignkey')
    op.drop_index('idx_experiment_methods_method_id', table_name='experiment_methods')
    op.drop_index('idx_experiment_methods_experiment_id', table_name='experiment_methods')
    op.drop_constraint(None, 'equipment', type_='foreignkey')
    op.drop_constraint(None, 'data_sources', type_='foreignkey')
    op.drop_constraint(None, 'data_sources', type_='foreignkey')
    op.drop_constraint(None, 'data_sources', type_='foreignkey')
    op.drop_constraint(None, 'data_sources', type_='foreignkey')
    op.drop_index('idx_data_sources_source_name_id', table_name='data_sources')
    op.drop_constraint(None, 'compositional_analysis', type_='foreignkey')
    op.drop_constraint(None, 'compositional_analysis', type_='foreignkey')
    op.drop_constraint(None, 'compositional_analysis', type_='foreignkey')
    op.drop_constraint(None, 'compositional_analysis', type_='foreignkey')
    op.drop_constraint(None, 'compositional_analysis', type_='foreignkey')
    op.drop_constraint(None, 'collectors', type_='foreignkey')
    op.drop_constraint(None, 'buildings', type_='foreignkey')
    op.drop_constraint(None, 'buildings', type_='foreignkey')
    op.drop_constraint(None, 'biomass_type', type_='unique')
    op.drop_constraint(None, 'biomass_quality', type_='foreignkey')
    op.drop_constraint(None, 'biomass_quality', type_='foreignkey')
    op.drop_index(op.f('ix_biomass_quality_biomass_id'), table_name='biomass_quality')
    op.alter_column('biomass_quality', 'biomass_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_constraint(None, 'biomass_price', type_='foreignkey')
    op.drop_constraint(None, 'biomass_price', type_='foreignkey')
    op.drop_index(op.f('ix_biomass_price_biomass_id'), table_name='biomass_price')
    op.alter_column('biomass_price', 'biomass_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_constraint(None, 'biomass_availability', type_='foreignkey')
    op.drop_constraint(None, 'biomass_availability', type_='foreignkey')
    op.drop_constraint(None, 'biomass_availability', type_='foreignkey')
    op.drop_constraint(None, 'biomass_availability', type_='foreignkey')
    op.drop_index(op.f('ix_biomass_availability_biomass_id'), table_name='biomass_availability')
    op.alter_column('biomass_availability', 'biomass_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_constraint(None, 'biomass', type_='foreignkey')
    op.drop_constraint(None, 'biomass', type_='foreignkey')
    op.drop_constraint(None, 'biomass', type_='foreignkey')
    op.drop_index(op.f('ix_biomass_biomass_type_id'), table_name='biomass')
    op.drop_index(op.f('ix_biomass_biomass_name'), table_name='biomass')
    op.drop_constraint(None, 'autoclave_profile', type_='foreignkey')
    op.drop_constraint(None, 'autoclave_profile', type_='foreignkey')
    op.drop_constraint(None, 'autoclave_profile', type_='foreignkey')
    op.drop_constraint(None, 'analysts_contacts', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_index('uq_analysis_results_experiment_parameter_replicate', table_name='analysis_results')
    op.drop_index('idx_analysis_results_parameter_id', table_name='analysis_results')
    op.drop_constraint(None, 'analysis_replicate_id', type_='foreignkey')
    op.drop_constraint(None, 'analysis_replicate_id', type_='foreignkey')
    op.drop_table('testusers2')
    op.drop_table('import_log')
    # ### end Alembic commands ###
